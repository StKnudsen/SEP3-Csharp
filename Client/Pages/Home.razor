@page "/Home"
@using SharedLibrary.Models
@using System.Text.Json
@using Client.Connection.GroupManagement
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IGroupManager GroupManager
@inject IJSRuntime JsRuntime

@attribute [Authorize(Policy = "SignedIn")]

<h3>Home</h3>
<AuthorizeView>
    <p>Velkommen @context.User.Identity?.Name</p>
    <Button @onclick="CreateGroupAsync">Opret gruppe</Button>
</AuthorizeView>

@code {
    private async void CreateGroupAsync()
    {
        string userAsJson = await JsRuntime.InvokeAsync<string>("sessionStorage.getItem", "currentUser");
        if (!string.IsNullOrEmpty(userAsJson))
        {
            User user = JsonSerializer.Deserialize<User>(userAsJson);
            string groupId = await GroupManager.CreateGroupAsync(user);
            
            NavigationManager.NavigateTo($"/Groups/{groupId}");
        }
    }
}