@page "/Login"
@using Client.Connection.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <h2 class="text-3xl font-medium text-gray-800 mx-auto text-center mt-20">Log in</h2>

        <div class="mt-6 p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md flex items-center space-x-4 border border-gray-300">
            <div class="flex-shrink-0">
                <svg class="mr-4 ml-2" viewBox="85.703 200 228.594 96.797" width="100.594" height="56.797">
                    <defs>
                        <style data-bx-fonts="Archivo" data-bx-pinned="true">
          </style>
                    </defs>
                    <rect x="200" width="38.099" height="78.022" style="fill: rgb(216, 216, 216);" y="200"></rect>
                    <rect x="238.099" width="38.099" height="78.022" style="fill: rgb(211, 6, 6);" y="200"></rect>
                    <rect x="276.198" width="38.099" height="78.022" style="fill: rgb(216, 216, 216);" y="200"></rect>
                    <rect x="161.901" width="38.099" height="78.022" style="fill: rgb(216, 216, 216);" y="200"></rect>
                    <rect x="123.802" width="38.099" height="78.022" style="fill: rgb(211, 6, 6);" y="200"></rect>
                    <rect x="85.703" width="38.099" height="78.022" style="fill: rgb(216, 216, 216); stroke-miterlimit: 1;" y="200">
                    </rect>
                    <text
                        style="fill: rgb(211, 6, 6); font-family: Archivo; font-size: 36.078px; font-weight: 500; line-height: 55.3196px; white-space: pre;"
                        transform="matrix(0.665219, 0, 0, 0.665225, 99.999999, 237.039731)">
                        D
                    </text>
                    <text
                        style="fill: rgb(211, 6, 6); font-family: Archivo; font-size: 36.078px; font-weight: 500; line-height: 55.3196px; white-space: pre;"
                        transform="matrix(0.665219, 0, 0, 0.665225, 171.927137, 237.039731)">
                        N
                    </text>
                    <text
                        style="fill: rgb(211, 6, 6); font-family: Archivo; font-size: 36.078px; font-weight: 500; line-height: 55.3196px; white-space: pre;"
                        transform="matrix(0.665219, 0, 0, 0.665225, 210.215375, 237.039731)">
                        N
                    </text>
                    <text
                        style="fill: rgb(211, 6, 6); font-family: Archivo; font-size: 36.078px; font-weight: 500; line-height: 55.3196px; white-space: pre;"
                        transform="matrix(0.665219, 0, 0, 0.665225, 279.76144, 237.039731)">
                        R
                    </text>
                    <circle style="fill: rgb(216, 216, 216);" transform="matrix(1.016949, 0, 0, 1.000008, -130.07028, -275.304043)"
                            cx="230.909" cy="553.364" r="18.732">
                    </circle>
                    <circle style="fill: rgb(211, 6, 6);" transform="matrix(1.016949, 0, 0, 1.000008, -91.971305, -275.304043)"
                            cx="230.909" cy="553.364" r="18.732">
                    </circle>
                    <circle style="fill: rgb(216, 216, 216);" transform="matrix(1.016949, 0, 0, 1.000008, -53.872325, -275.304043)"
                            cx="230.909" cy="553.364" r="18.732">
                    </circle>
                    <circle style="fill: rgb(216, 216, 216);" transform="matrix(1.016949, 0, 0, 1.000008, -15.773346, -275.304043)"
                            cx="230.909" cy="553.364" r="18.732">
                    </circle>
                    <circle style="fill: rgb(211, 6, 6);" transform="matrix(1.016949, 0, 0, 1.000008, 22.325636, -275.304043)"
                            cx="230.909" cy="553.364" r="18.732">
                    </circle>
                    <circle style="fill: rgb(216, 216, 216);" transform="matrix(1.016957, 0, 0, 1.000008, 60.422824, -275.304043)"
                            cx="230.909" cy="553.364" r="18.732">
                    </circle>
                </svg>
            </div>
            <div>
                <!-- <h2 class="text-xl font-medium text-black mb-4">Log in</h2>-->
                <div class="text-gray-500">
                    <form class="form-group">
                        <label class="text-gray-700 text-sm font-semibold">Brugernavn</label>
                        <input class="border rounded border-gray-400 mb-2" type="text" name="Username" @bind-value="Username">
                        <label class="text-gray-700 text-sm font-semibold">Password</label>
                        <input class="mb-2 border rounded border-gray-400" type="password" name="password" @bind-value="Password">
                        <p class="text-red-600 text-sm">@ErrorLabel</p>
                    </form>
                    <button @onclick="PerformLoginAsync"
                            class="mt-4 bg-gray-300 hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow">
                        Log in <!-- Disable hvis der er input i login felterne -->
                    </button>
                    <button @onclick="GuestLoginAsync"
                            class="mt-4 mr-2 bg-red-300 hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow">
                        Gæst
                    </button>
                    <button @onclick="GoToNewUser" class="text-sm text-red-800 hover:text-red-500 transition duration-500">Opret en bruger</button>
                </div>
            </div>
        </div>
    </NotAuthorized>

    <Authorized>
        <p class="text-4xl text-red-500">Already signed in!(IKKE STYLET ELLER OVERSAT)</p>
    </Authorized>
</AuthorizeView>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string ErrorLabel { get; set; }

    private async void PerformLoginAsync()
    {
        ErrorLabel = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLoginAsync(Username, Password);
            NavigationManager.NavigateTo("/Home");
        }
        catch (Exception e)
        {
            ErrorLabel = e.Message;
        }
    }

    private void GoToNewUser()
    {
        NavigationManager.NavigateTo("/NewUser");
    }

    private async void GuestLoginAsync()
    {
        ErrorLabel = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).GuestLoginAsync();
            NavigationManager.NavigateTo("/Home");
        }
        catch (Exception e)
        {
            ErrorLabel = e.Message;
        }
    }

}